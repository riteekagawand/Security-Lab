import java.math.BigInteger;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class SHA256Hashing {
    
    // Method to calculate SHA-256 hash value
    public static byte[] getSHA(String input) throws NoSuchAlgorithmException {
        // Create a MessageDigest instance for SHA-256
        MessageDigest md = MessageDigest.getInstance("SHA-256");
        // Calculate the hash and return it as a byte array
        return md.digest(input.getBytes(StandardCharsets.UTF_8));
    }

    // Convert byte array into hexadecimal string
    public static String toHexString(byte[] hash) {
        // Convert byte array into signum representation
        BigInteger number = new BigInteger(1, hash);
        // Convert message digest into hex value
        StringBuilder hexString = new StringBuilder(number.toString(16));
        
        // Pad with leading zeros if necessary
        while (hexString.length() < 64) {
            hexString.insert(0, '0');
        }

        return hexString.toString();
    }

    // Driver code
    public static void main(String[] args) {
        try {
            System.out.println("HashCode Generated by SHA-256 for:\n");

            String s1 = "Riteeka";
            System.out.println(s1 + " : " + toHexString(getSHA(s1)));

            String s2 = "hello world"; // Removed leading newline
            System.out.println(s2 + " : " + toHexString(getSHA(s2)));

            String s3 = "Gawand";
            System.out.println(s3 + " : " + toHexString(getSHA(s3)));

        } catch (NoSuchAlgorithmException e) {
            // Handle incorrect message digest algorithms
            System.out.println("Exception thrown for incorrect algorithm: " + e);
        }
    }
}
